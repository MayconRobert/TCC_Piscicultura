@model Site_piscicultura.Models.ModeloBiometria

@{
    ViewBag.Title = "RegistrarBiometria";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Container{

<link href="../../Content/sweetalert2.min.css" rel="stylesheet" />

<script src="../../Scripts/sweetalert2.all.min.js"></script>

<div class="background-register">

    <div class="panel panel-default">

        <div class="main-title">

            Registrar Biometria

        </div>

        <hr />

        <div class="panel-body">

            <div class="formatted-form">

                <div class="border-big">

                    @using (Html.BeginForm())
    {
                        @Html.AntiForgeryToken()


                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Id_Tanque, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10" onchange="AtualizaQuantidadePeixes()">
                                    @Html.DropDownList("NomeDoTanque", String.Empty)
                                    @Html.ValidationMessageFor(model => model.Id_Tanque, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Qtd_peixesTanque, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Qtd_peixesTanque, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Tanque" } })
                                    @Html.ValidationMessageFor(model => model.Qtd_peixesTanque, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Qtd_peixesAmostra, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Qtd_peixesAmostra, new { htmlAttributes = new { @class = "form-control", @placeholder = "Amostra" } })
                                    @Html.ValidationMessageFor(model => model.Qtd_peixesAmostra, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Peso_Amostra, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Peso_Amostra, new { htmlAttributes = new { @class = "form-control", @placeholder = "Kg" } })
                                    @Html.ValidationMessageFor(model => model.Peso_Amostra, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Peso_Medio, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @Html.EditorFor(model => model.Peso_Medio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Peso_Medio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Ganho_PesoAmostra, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Ganho_PesoAmostra, new { htmlAttributes = new { @class = "form-control", @placeholder = "Amostra" } })
                                    @Html.ValidationMessageFor(model => model.Ganho_PesoAmostra, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Ganho_PesoMedio, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Ganho_PesoMedio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "Médio por Peixe" } })
                                    @Html.ValidationMessageFor(model => model.Ganho_PesoMedio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Registrar" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Voltar", "MenuBiometria")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}

@section Script{
    <script>
        $(document).ready(function () {
            if ('@TempData["Msg"]' != "") {

                swal('@TempData["Msg"]');

            } else { }

            $("#Data").mask("00/00/0000");

            $("#Qtd_peixesAmostra, #Peso_Amostra").on('input', function (e) {
                AtualizaPesoMedio();
            });

            $("#Qtd_peixesAmostra, #Ganho_PesoAmostra").on('input', function (e) {
                AtualizaGanhoPesoMedio();
            });

        });

        //$(document).ready(function () {

        //    //document.getElementById("Data").mask("00/00/0000");
        //});

        function AtualizaQuantidadePeixes() {
            $.ajax({
                type: "POST",
                url: "/Biometria/GetQuantidadePeixes", // Local do método do controller
                data: '{"Id":"' + document.getElementById("NomeDoTanque").value + '"}', // Passar os dados a serem utilizados
                contentType: "application/json; charset=utf-8",
                dataType: "json", // Tipo do dado
                success: function (msg) { // msg é a variável que armazena o retorno do método utilizado pela url (GetQuantidadePeixes)
                    document.getElementById("Qtd_peixesTanque").value = parseInt(msg); // Setando o valor do textbox

                },
                error: function (xhr, status, error) {
                    alert("Result: " + status + " | " + error + " | " + xhr.status + " | " + xhr.statusText);
                }
            });
        }

        function AtualizaPesoMedio() {
            var qtdPeixeAmostra, qtdPesoAmostra, PesoMedio;
            qtdPeixeAmostra = parseInt(document.getElementById("Qtd_peixesAmostra").value);
            qtdPesoAmostra = parseFloat(document.getElementById("Peso_Amostra").value);
            PesoMedio = qtdPesoAmostra / qtdPeixeAmostra;
            if (isNaN(PesoMedio)) {
                document.getElementById("Peso_Medio").value = "Preencha a quantidade e peso da amostra.";
            } else {
                document.getElementById("Peso_Medio").value = parseFloat(PesoMedio).toFixed(5).replace(".", ",");
            }

            //alert(PesoMedio);

        }

        function AtualizaGanhoPesoMedio() {
            var qtdPeixeAmostra, qtdGanhoPesoAmostra, GanhoPesoMedio;
            qtdPeixeAmostra = parseInt(document.getElementById("Qtd_peixesAmostra").value);
            qtdPesoAmostra = parseFloat(document.getElementById("Ganho_PesoAmostra").value);
            GanhoPesoMedio = qtdPesoAmostra / qtdPeixeAmostra;
            if (isNaN(GanhoPesoMedio)) {
                document.getElementById("Ganho_PesoMedio").value = "Preencha a quantidade e  o ganho de peso da amostra.";
            } else {
                document.getElementById("Ganho_PesoMedio").value = parseFloat(GanhoPesoMedio).toFixed(5).replace(".", ",");
            }

            //alert(PesoMedio);

        }

        //$(document).ready(function () {
        //    var qtdPeixeAmostra, qtdPesoAmostra, PesoMedio;
        //    qtdPeixeAmostra = document.getElementById("Qtd_peixesAmostra");
        //    qtdPesoAmostra = document.getElementById("Peso_Amostra");
        //    PesoMedio = qtdPesoAmostra / qtdPeixeAmostra;
        //    document.getElementById("Peso_Medio").innerHTML = parseInt(pesoMedio);
        //    alert(PesoMedio);
        //});


    </script>

}
